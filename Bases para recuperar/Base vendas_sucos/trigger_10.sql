-- Criar tabela com a totalização das vendas, na medida que vendas forem incluidas no banco vendas_sucos, essa tabela será preenchida
CREATE TABLE TAB_FATURAMENTO
(DATA_VENDA DATE NULL, TOTAL_VENDA FLOAT);

SELECT * FROM TAB_FATURAMENTO;
SELECT * FROM CLIENTES;
SELECT * FROM VENDEDORES;
SELECT * FROM NOTAS;
SELECT * FROM ITENS_NOTAS;

DELETE FROM TAB_FATURAMENTO;

-- Incluindo um faturamento, precisa do cabeçalho da nota e os itens da nota fiscal

-- Cabeçalho da nota
INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('0100', '2019-05-08', '1471156710', '235', 0.10);
-- Itens da nota
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0100', '1000889', 100, 10);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0100', '1002334', 100, 10);

-- Faturamento, primeiro cabeçalho da nota, depois os itens
INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('0101', '2019-05-08', '1471156710', '235', 0.10);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0101', '1000889', 100, 10);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0101', '1002334', 100, 10);

INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('0102', '2019-05-08', '1471156710', '235', 0.10);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0102', '1000889', 100, 10);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0102', '1002334', 100, 10);

-- Consulta faturamento
SELECT A.DATA_VENDA, SUM(B.QUANTIDADE * B.PRECO) AS TOTAL_VENDA FROM
NOTAS A INNER JOIN ITENS_NOTAS B
ON A.NUMERO = B.NUMERO
GROUP BY A.DATA_VENDA;

-- Inserindo esse faturamento na tabela de faturamentos criada
INSERT INTO TAB_FATURAMENTO
SELECT A.DATA_VENDA, SUM(B.QUANTIDADE * B.PRECO) AS TOTAL_VENDA FROM
NOTAS A INNER JOIN ITENS_NOTAS B
ON A.NUMERO = B.NUMERO
GROUP BY A.DATA_VENDA;

-- Ao rodar uma venda nova, preciso colocar tambem o insert e apagar a tb e inserir de novo 
INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('0103', '2019-05-08', '1471156710', '235', 0.10);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0103', '1000889', 100, 10);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0103', '1002334', 100, 10);
DELETE FROM TAB_FATURAMENTO;
INSERT INTO TAB_FATURAMENTO
SELECT A.DATA_VENDA, SUM(B.QUANTIDADE * B.PRECO) AS TOTAL_VENDA FROM
NOTAS A INNER JOIN ITENS_NOTAS B
ON A.NUMERO = B.NUMERO
GROUP BY A.DATA_VENDA;

INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('0104', '2019-05-08', '1471156710', '235', 0.10);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0104', '1000889', 100, 10);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0104', '1002334', 100, 10);
DELETE FROM TAB_FATURAMENTO;
INSERT INTO TAB_FATURAMENTO
SELECT A.DATA_VENDA, SUM(B.QUANTIDADE * B.PRECO) AS TOTAL_VENDA FROM
NOTAS A INNER JOIN ITENS_NOTAS B
ON A.NUMERO = B.NUMERO
GROUP BY A.DATA_VENDA;


/* Usando a trigger não precisa fazer esse passo longo toda vez que inserir algo,
na triggger a regra será, no momento que eu inserir dados na tabela de itens, eu atualizo o faturamento */

DELETE FROM ITENS_NOTAS;
DELETE FROM NOTAS;

/* Ao invés de finalizar com ;, finalizo com // porque escolhi o meu delimitador //
coloquei isso ao invés de só finalizar com ;, porque dentro do trigger vão ter vários comandos delimitados com ;
e o mysql vai pensar que o comando acabou quando algum desses comandos com ; acaba, por isso escolhi esse delimitador */

DELIMITER // 
CREATE TRIGGER TG_CALCULA_FATURAMENTO_INSERT AFTER INSERT ON ITENS_NOTAS
FOR EACH ROW BEGIN
	DELETE FROM TAB_FATURAMENTO;
	INSERT INTO TAB_FATURAMENTO
	SELECT A.DATA_VENDA, SUM(B.QUANTIDADE * B.PRECO) AS TOTAL_VENDA FROM
	NOTAS A INNER JOIN ITENS_NOTAS B
	ON A.NUMERO = B.NUMERO
	GROUP BY A.DATA_VENDA;
END //


